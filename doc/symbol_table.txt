---- Functions

--- table_error
-- Syntax
void table_error(char *msg)

-- Notes 
Prints error message and exits program.

--- element_name_exists
-- Syntax
int element_name_exists(struct table_element *elements, unsigned length, const char *name)

-- Notes
Boolean function checking if a name exists in an array of table_elements.

--- getname
-- Syntax
char *getname(struct table_element element)

-- Notes
Returns name of table_element.

--- table_init
-- Syntax
symbol_table table_init()

-- Notes
Returns instance of an open symbol table.

--- class_init
-- Syntax
struct class class_init(const char *name)

-- Notes
Returns intance of an open class.

--- variable_init
-- Syntax
struct variable variable_init(const char *name, enum type_t type, int is_class_instance, const char *class_name)

-- Notes
Returns instance of variable.

--- function_init
-- Syntax
struct function function_init(const char *name, enum type_t return_type)

-- Notes
Returns instance of open function.

--- add_parameter
-- Syntax
void add_parameter(struct function *func, struct variable var, unsigned line_number)

-- Notes
Adds a single parameter to function. To add 3 parameters; call the function 3 times.

--- table_insert
-- Syntax
void table_insert(symbol_table *table, struct table_element element, unsigned line_number)

-- Notes
Inserts table_element into symbol table.

--- is_declared
-- Syntax
int is_declared(symbol_table table, const char *name)

-- Notes
Checks for declaration of anything with the given name.

--- insert_field
-- Syntax
void insert_field(struct class *c, struct variable var, unsigned line_number)

-- Notes
Inserts field into declared class.

--- insert_method
-- Syntax
void insert_method(struct class *c, struct function func, unsigned line_number)

-- Notes
Inserts method into declared class.

--- get
-- Syntax
struct table_element get(symbol_table table, const char *name)

-- Notes
Returns first found table_element in open scope by given name.
