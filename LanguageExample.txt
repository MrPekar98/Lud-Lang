____________________________________________COMMENTS__________________________________________________________
# This is a comment. #

____________________________________________PROTOCOL DECLARATION_______________________________________________

protocol DogBody -> AnimalBody:
    amountOfLegs() : num
    sumOfAges(Dog dog1, Dog dog2) : num

    # Static method in protocol. #
    public static sumOfLegs(num dogs) : num
    {
        return dogs * 4
    }

    # Returns an instance of an animal #
    public static createAnimal(string name, num age) : Animal
    {
        return create Animal(name, age)
    }

____________________________________________CLASS DECLARATION_________________________________________________

# Represent an animal #
class Animal
{
    internal animalName : string
    internal age : num

    internal constructor(string name, num age)
    {
        this.animalName = name
        this.age = age
    }

    public getName() : string
    {
        return this.animalName
    }

    public getAge() : num
    {
        return this.age
    }
}

# Sub-class of Animal representing a dog. #
class Dog -> Animal using DogBody, Movement
{
    private adopted = false : bool
    private arrayOfNumbers : num[]
    private arrayOfStrings : string[]
    private helloWorld : string
    
    public constructor(string name, num age, bool isAdopted)
    {
        super.animalName = name
        super.age = age
        this.adopted = isAdopted
        this.arrayOfNumbers = new int[5];
        this.arrayOfString = {"Hello", "world"}
        this.helloWord = arrayOfStrings[0] + " " + arrayOfStrings[1]
    }

    public setName(string name) : void
    {
        super.animalName = name
    }

    public setAge(num age) : void
    {
        super.age = age
    }

    public setIsAdopted(bool value) : void{
        this.adopted = value
    }

    public isAdopted() : bool
    {
        return this.adopted
    }

    # Calculates the sum of years of two dogs. #
    public static sumOfAges(Dog dog1, Dog dog2) : num
    {
        return dog1.getAge() + dog2.getAge()
    }
}
